% \iffalse meta-comment
%
% Copyright (C) 1992 by David Carlisle, Frank Mittelbach.  
% All rights reserved.
% 
% This file is part of the validate package.
% 
% IMPORTANT NOTICE:
% 
% You are not allowed to change this file.  In case of error
% write to the email address mentioned in the file readme.val.
% 
% \fi
%
% Test file for LaTeX2.09 testing latex.bug (style) entries:
%
% 55.  Style options files twocolumn and titlepage shortened to 8 chars.
% User interface preserved by adding \ds@titlepage etc. to input the
% coded name. This supports (most) OS with file length restrictions.
% (Change made 30 Mar 91.)
% 63.  Change 55 caused the twocolumn document style option to no longer
% work since twocolumn.sty was read in too early. (Reported by Bernard
% Gaulle. Corrected 15 Oct 91.)

\documentclass[twocolumn,titlepage]{book}
\title{Testing changes to {\tt twocolumn} and {\tt titlepage} option file 
names}
\author{Chris Martin}
\begin{document}

% Input the test macros for LaTeX2e
\input{test2e}

% Everything before this is ignored by the test system.
\START

\AUTHOR{Chris Martin}

% Declare the format used on the original run, as printed by
% LaTeX.
%
\FORMAT{LaTeX2e<1993/12/24>}

% Book document style for this test. We need to have a
% minimal font setup, for the last few tests, otherwise we
% could have done this with no documentclass.
%
\CLASS[twocolumn,titlepage]{book}

% Optionally declare commands which are (or might be)
% defined in this `module' of LaTeX.  Each command declared
% will be recorded in the .tlg file as Defined, Undefined,
% or Relaxed (ie \let to \relax, which LaTeX treats for most
% purposes as being undefined)
%
\declare@command\ds@twocolumn
\typeout{\meaning\ds@twocolumn}
\declare@command\ds@titlepage
\typeout{\meaning\ds@titlepage}
\maketitle
\chapter{be of some he commands insideally it should set}

\section{Tips}
The test should be written to show that the command meets its
specification. Ideally it should not fail if the command is correctly
re-implemented in a different way. This means that the primitive tracing
facilities like and should
probably not be used, as these reveal the implementation details of the
command.  

If the command involves visual formatting, one way to get information
into the file is to do all the commands inside
and then. Before showing 
the box you should set and
to suitable values so that just the right amount of information
displayed. has a command called which can
be of some help here.

might also be used (with
care), say if you were testing section headings at the top and bottom
of pages.  Other useful commands are 
which is like, but puts less junk in the file, and, which is like.

Please remember that it isn't sufficient to produce a test file that
shows the desired behavior in the file since this file will
not be inspected by the test system later on. Nevertheless, it is
often helpful to check the when creating a test file but you
have to make sure that the relevant information is also displayed in
the in the end.

The command involves like and should
probable values so then. Ideally it sure that the relp here.

mitive tracing a test file but you
have 
which can
into the file is like and should be written top and bottom
of the command called whication. Before showing 
the desired behavior in the relevant it isn't suffich is like,
behavior in thelp here.

might also displayed in
the in the ee written to show that the command meets its
specification. Ideally it should not fail if the command is correctly
re-implemented in a different way. This means that the primitive tracing
facilities like and should
probably not be used, as these reveal the implementation details of the
command.  

If the command involves visual formatting, one way to get information
into the file is to do all the commands inside
and then. Before showing 
the box you should set and
to suitable values so that just the right amount of information
displayed. has a command called which can
be of some help here.

%
\end{document}

