\directlua{%
  Babel = {}
  function Babel.bytes(line)
    return line:gsub("(.)",
      function (chr) return unicode.utf8.char(string.byte(chr)) end)
  end
  function Babel.begin_process_input()
    if luatexbase and luatexbase.add_to_callback then
      luatexbase.add_to_callback('process_input_buffer',Babel.bytes,'Babel.bytes')
    else
      Babel.callback = callback.find('process_input_buffer')
      callback.register('process_input_buffer',Babel.bytes)
    end
  end
  function Babel.end_process_input ()
    if luatexbase and luatexbase.remove_from_callback then
      luatexbase.remove_from_callback('process_input_buffer','Babel.bytes')
    else
      callback.register('process_input_buffer',Babel.callback)
    end
  end 
}

\def\BabelStringsDefault{unicode}

% defaultcommands: do nothing

\let\luabbl@stop\relax
\AddBabelHook{luatex}{encodedcommands}{%
  \def\bbl@tempa{utf8}\def\bbl@tempb{#1}%
  \ifx\bbl@tempa\bbl@tempb\else
    \directlua{Babel.begin_process_input()}%
    \def\luabbl@stop{%
      \directlua{Babel.end_process_input()}}%
  \fi}%
\AddBabelHook{luatex}{stopcommands}{%
  \luabbl@stop
  \let\luabbl@stop\relax}

\AddBabelHook{luatex}{patterns}{%
  \ifx\directlua\relax\else
    \ifcsname lu@texhyphen@loaded@\the\language\endcsname \else
      \global\@namedef{lu@texhyphen@loaded@\the\language}{}%
      \directlua{
	if not luatexhyphen then
	    dofile(assert(kpse.find_file("luatex-hyphen.lua")))
	end
	luatexhyphen.loadlanguage("\luaescapestring{#1}",
	  \the\language)}%
    \fi
  \fi}

\AddBabelHook{luatex}{adddialect}{%
  \ifx\directlua\relax\else
    \directlua{
      if not luatexhyphen then
	  dofile(assert(kpse.find_file("luatex-hyphen.lua")))
      end
      luatexhyphen.adddialect("\string#1", "\string#2")
    }%
  \fi}

\AddBabelHook{luatex}{preload}{%
  \directlua{
    if not luatexhyphen then
      dofile(assert(kpse.find_file("luatex-hyphen.lua")))
    end
    processnow = (tex.language == 0) or
      (luatexhyphen.lookupname("\luaescapestring{#1}") == nil)}%
  \ifnum0=\directlua{tex.sprint(processnow and "0" or "1")}\relax
    \global\toks8\expandafter{\the\toks8#1, }%
    \global\@namedef{lu@texhyphen@loaded@\the\language}{}%
  \fi}

\AddBabelHook{luatex}{loadpatterns}{%
  \ifnum0=\directlua{tex.sprint(processnow and "0" or "1")}\relax
    \input #1\relax
  \fi}

\AddBabelHook{luatex}{loadexceptions}{%
  \ifnum0=\directlua{tex.sprint(processnow and "0" or "1")}\relax
    \input #1\relax
  \fi
  \directlua{processnow = nil}}