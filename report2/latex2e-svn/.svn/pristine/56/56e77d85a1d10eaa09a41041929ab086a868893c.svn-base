# Construct file for LaTeX2e

# Where to put the distribution files
$DISTRIB = 'distrib';
$BUILD = 'build';

$SCRIPTDIR = 'scripts';

$FORMAT = "#$BUILD/latex.fmt";
$FORMATPDF = "#$BUILD/pdflatex.fmt";

@basefiles = <base/*>;
@linkedfiles = map { my $x=$_; $x =~ s/^base/unpacked/; $x; } grep !/^Cons/,@basefiles;

$LDOCS = [ qw(
       cfgguide
       clsguide
       cyrguide
       encguide
       fntguide
       ltnews01
       ltnews02
       ltnews03
       ltnews04
       ltnews05
       ltnews06
       ltnews07
       ltnews08
       ltnews09
       ltnews10
       ltnews11
       ltnews12
       ltnews13
       ltnews14
       ltnews15
       ltnews16
       ltnews17
       ltnews18
       ltnews19
       ltnews20
       ltx3info
       modguide
       usrguide
)];


@toolspdffiles = map { my $x=$_; $x =~ s/\.dtx$/.pdf/; $x; } <required/tools/*.dtx>;
@babelpdffiles = ();
@cyrillicpdffiles = ();
@graphicspdffiles = qw(required/graphics/grfguide.pdf);

@docfiles = (
	@toolspdffiles,
	@babelpdffiles,
	@cyrillicpdffiles,
	@graphicspdffiles,
	map { "doc/$_.pdf" } @$LDOCS,
);


Export qw ( CONS DISTRIB BUILD FORMAT FORMATPDF LDOCS);

# A standard construction environment.
$CONS = new cons(
    RUNTEX => "cd build ; ../$SCRIPTDIR/run-tex",
    ENV => { PATH => $ENV{PATH} , HOME => $ENV{HOME} }
);

sub cons::CompileTeX {
    my($cons, $dir, $nms, $ext, $dependencies) = @_;
    $ext = "tex" unless defined $ext;
    foreach my $tgt (@$nms) {
	$cons->Command(["$dir/$tgt.pdf"], ($FORMATPDF,"#$BUILD/$tgt.$ext",@$dependencies),qq(
	    export TEXINPUTS=../%2:d:$ENV{TEXINPUTS} ; %RUNTEX %1:a %2:a && mv %>:f %>:a || echo NOT GOOD
        ));
    }
}

Conscript_chdir 1;

Default 'help';

$HELPMESSAGE = <<__EOH__;

Available targets:

  help         This message

 General targets:

  unpacked     Unpack the base files into the unpacked subdir
  doc          Build the documentation PDF files in doc subdir
  testfiles    Run the test suite.
  
  latex2e-distrib.zip
               Generate zip file for distribution.

 Specific targets:

   testfiles/XXXX.tmp.tlg
               Run test file XXXX. Both XXXX.lvt and XXXX.tlg must be present.

   build/XXXX.tlg
               Generate XXXX.tlg anew. Works only if you do not have
                   testfiles/XXXX.tlg, so you better remove the latter first.

__EOH__

Command $CONS 'help', qq(
    @[perl] print \$HELPMESSAGE;
);

# the following creates hard links, which do not work well with the
# distribution as zip and for CTAN. 
#Install $CONS 'unpacked', @basefiles;
# Hence, do the symbolic link by hand
foreach (@basefiles) {
    my $t = $_;
    $t =~ s/base/unpacked/;
    $CONS->Command($t,$_,qq(ln -s ../%< %>));
}

Install $CONS 'build', <support/*>;

@basedtxfiles = <base/*.dtx>;
@builddtxfiles = map { my $x=$_; $x =~ s/^base/build/; $x; } @basedtxfiles;

Install $CONS 'build', @basedtxfiles;
Install $CONS 'build', "base/source2e.tex";

CompileTeX $CONS "doc",["source2e"],"tex",\@builddtxfiles;

@supportfiles = <support/*>;
foreach (@supportfiles) { s/^support/build/; }

# unpack the distribution
# Make sure that no external input files are read by setting TEXINPUTS
Command $CONS ['unpacked/unpack.log','unpacked/latex.ltx'], @linkedfiles, qq(
	echo Generating LaTeX2e kernel bootstrap files...
 	(export TEXINPUTS=. ; cd unpacked ; yes | etex -ini unpack.ins 2>/dev/null && touch unpack.log )
);

# Format creation
Command $CONS "$FORMAT", (@supportfiles,"unpacked/unpack.log",'unpacked/latex.ltx'), qq(
	( cd build ; yes | TEXINPUTS=.:../unpacked etex -ini -etex latex.ltx ; test -f %>:f )
);
Command $CONS ["$FORMATPDF"], (@supportfiles,"unpacked/unpack.log",'unpacked/latex.ltx'), qq(
        ln -f -s latex.ltx build/pdflatex.ltx
	(cd build ; yes | TEXINPUTS=.:../unpacked pdfetex -ini -jobname=pdflatex "*pdflatex.ini" latex.ltx ; test -f %>:f )
);

#build documentation
Build (
      "doc/Conscript",
);

# zip to distribution files
Command $CONS ["latex2e-distrib.zip"], ("$FORMAT","#$BUILD/tools.log","#$BUILD/cyrlatex.log","unpacked/unpack.log",@docfiles,@requireddocs), qq(
	zip -y -r latex2e-distrib.zip base unpacked doc required -x base/changes.old.txt -x unpacked/changes.old.txt -x unpacked/unpack.log -x Construct -x \\*/.consign -x \\*/Conscript -x \\*/.svn/ -x \\*/.svn/\\* -x \\*.aux -x \\*.dvi -x \\*.glo -x \\*.idx -x \\*.log -x \\*~
);

# Test suite
Build ( "testfiles/Conscript" );
Build qw(
      required/tools/Conscript
      required/cyrillic/Conscript
      required/graphics/Conscript
);

