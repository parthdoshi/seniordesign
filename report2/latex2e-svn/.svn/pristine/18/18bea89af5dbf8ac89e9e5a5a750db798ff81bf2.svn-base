% \iffalse meta-comment
%
% Copyright 1989-2008 Johannes L. Braams and any individual authors
% listed elsewhere in this file.  All rights reserved.
% 
% This file is part of the Babel system.
% --------------------------------------
% 
% It may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2003/12/01 or later.
% 
% This work has the LPPL maintenance status "maintained".
% 
% The Current Maintainer of this work is Johannes Braams.
% 
% The list of all files belonging to the Babel system is
% given in the file `manifest.bbl. See also `legal.bbl' for additional
% information.
% 
% The list of derived (unpacked) files belonging to the distribution
% and covered by LPPL is defined by the unpacking scripts (with
% extension .ins) which are part of the distribution.
% \fi
% \CheckSum{0}
%%%     docstring           = " This file can act as a template for
%%%                            people who want to provide extra
%%%                            languages to be included in the babel
%%%                            distribution.
%
% \iffalse
%    Tell the \LaTeX\ system who we are and write an entry on the
%    transcript.
%<*dtx>
\ProvidesFile{<language>.dtx}
%</dtx>
%<code>\ProvidesLanguage{<language>}
%\fi
%\ProvidesFile{<language>.dtx}
        [2008/03/17 v1.6 <Language> support from the babel system]
%\iffalse
%% Babel package for LaTeX version 2e
%% Copyright (C) 1989 -- 2008
%%           by Johannes Braams, TeXniek
%
%% Please report errors to: J.L. Braams
%%                          babel at braams.xs4all.nl
%
%    This file is part of the babel system, it provides the source code for
%    the <Language> language definition file.
%<*filedriver>
\documentclass{ltxdoc}
\newcommand*{\TeXhax}{\TeX hax}
\newcommand*{\babel}{\textsf{babel}}
\newcommand*{\langvar}{$\langle \mathit lang \rangle$}
\newcommand*{\note}[1]{}
\newcommand*{\Lopt}[1]{\textsf{#1}}
\newcommand*{\file}[1]{\texttt{#1}}
\begin{document}
 \DocInput{<language>.dtx}
\end{document}
%</filedriver>
%\fi
% \GetFileInfo{<language>.dtx}
%
% \changes{v1.1}{1994/02/27}{Rearranged the file a little}
% \changes{v1.2}{1994/06/04}{Update for \LaTeXe}
% \changes{v1.3}{1995/05/13}{Update for \babel\ release 3.5}
% \changes{v1.4}{1996/10/30}{Update for \babel\ release 3.6}
% \changes{v1.5}{1997/03/18}{Update for \babel\ release 3.7}
% \changes{v1.6}{2004/02/20}{Update for \babel\ release 3.8}
%
%  \section{The <Language> language}
%
%    The file \file{\filename}\footnote{The file described in this
%    section has version number \fileversion\ and was last revised on
%    \filedate.}  defines all the language definition macros for the
%    <Language> languagee.
%
% \StopEventually{}
%
%    The macro |\LdfInit| takes care of preventing that this file is
%    loaded more than once, checking the category code of the
%    \texttt{@} sign, etc.
%    \begin{macrocode}
%<*code>
\LdfInit{<language>}{captions<language>}
%    \end{macrocode}
%
%    When this file is read as an option, i.e. by the |\usepackage|
%    command, \texttt{<language>} could be an `unknown' language in
%    which case we have to make it known.  So we check for the
%    existence of |\l@<language>| to see whether we have to do
%    something here.
%
%    \begin{macrocode}
\ifx\undefined\l@<language>
  \@nopatterns{<Language>}
  \adddialect\l@<language>0\fi
%    \end{macrocode}
%    For the <Dialect> version of these definitions we just add a
%    ``dialect''. Also, the macros |\captions<dialect>| and
%    |\extras<dialect>| are |\let| to their \texttt{<language>}
%    counterparts when these parts are defined.
%    \begin{macrocode}
\adddialect\l@<dialect>\l@<language>
%    \end{macrocode}
%    The next step consists of defining commands to switch to (and
%    from) the <Language> language.
%
%    Now we declare the |<attrib>| language attribute.
%    \begin{macrocode}
\bbl@declare@ttribute{<language>}{<attrib>}{%
%    \end{macrocode}
%    This code adds the expansion of |\extras<attrib><language>| to
%    |\extras<language>|.
%    \begin{macrocode}
  \expandafter\addto\expandafter\extras<language>
  \expandafter{\extras<attrib><language>}%
  \let\captions<language>\captions<attrib><language>
  }
%    \end{macrocode}
%
%  \begin{macro}{\<language>hyphenmins}
%    This macro is used to store the correct values of the hyphenation
%    parameters |\lefthyphenmin| and |\righthyphenmin|.
%    \begin{macrocode}
\providehyphenmins{<language>}{\tw@\thr@@}
%    \end{macrocode}
%  \end{macro}
%
% \begin{macro}{\captions<language>}
%    The macro |\captions<language>| defines all strings used in the
%    four standard documentclasses provided with \LaTeX.
%    \begin{macrocode}
\def\captions<language>{}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\captions<dialect>}
%    \begin{macrocode}
\let\captions<dialect>\captions<language>
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\date<language>}
%    The macro |\date<language>| redefines the command |\today| to
%    produce <Language> dates.
%    \begin{macrocode}
\def\date<language>{%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\date<dialect>}
%    The macro |\date<dialect>| redefines the command |\today| to
%    produce <Dialect> dates.
%    \begin{macrocode}
\def\date<dialect>{%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\extras<language>}
% \begin{macro}{\noextras<language>}
%    The macro |\extras<language>| will perform all the extra
%    definitions needed for the <Language> language. The macro
%    |\noextras<language>| is used to cancel the actions of
%    |\extras<language>|.  For the moment these macros are empty but
%    they are defined for compatibility with the other
%    language definition files.
%
%    \begin{macrocode}
\addto\extras<language>{}
\addto\noextras<language>{}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\extras<dialect>}
% \begin{macro}{\noextras<dialect>}
%    Also for the ``<dialect>'' variant no extra definitions are
%    needed at the moment.
%    \begin{macrocode}
\let\extras<dialect>\extras<language>
\let\noextras<dialect>\noextras<language>
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
%    The macro |\ldf@finish| takes care of looking for a
%    configuration file, setting the main language to be switched on
%    at |\begin{document}| and resetting the category code of
%    \texttt{@} to its original value.
%    \begin{macrocode}
\ldf@finish{<language>}
%</code>
%    \end{macrocode}
%
% \Finale
%\endinput
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
%%
